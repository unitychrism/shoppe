- @page_title = t('shoppe.stock_level_adjustments.stock_levels_title', item_name: @item.name)

= content_for :header do
  %p.buttons
    - case @item
    - when Shoppe::Product
      - @active_nav = :products
      = link_to t('shoppe.stock_level_adjustments.edit_product'), [:edit, @item], :class => 'button'
      = link_to t('shoppe.stock_level_adjustments.back_to_product'), :products, :class => 'button'

  %h2.products= t('shoppe.stock_level_adjustments.stock_levels_for', item_name: @item.name)

.table
  %p.info
    = t('shoppe.stock_level_adjustments.current_stock_level_html', item_stock: @item.stock).html_safe
    %span.float-right= page_entries_info @stock_level_adjustments

  = form_for @new_sla do |f|
    = hidden_field_tag 'item_type', params[:item_type]
    = hidden_field_tag 'item_id', params[:item_id]
    %table.data
      %thead
        %tr
          %th{:width => '25%'}= t('shoppe.stock_level_adjustments.date')
          %th{:width => '25%'}= t('shoppe.stock_level_adjustments.location')          
          %th{:width => '25%'}= t('shoppe.stock_level_adjustments.description')
          %th{:width => '25%'}= t('shoppe.stock_level_adjustments.adjustment')
      %tbody
        %tr.form
          %td
          %td.stockLocation= f.select :location_id, options_for_select(Shoppe::ProductLocation.ordered.select { |v| v.product_id == @item.id }.map { |v| [v.name, v.location_id] }, nil), :include_blank => true
          %td.desc= f.text_field :description
          %td.adjustment
            = f.text_field :adjustment
            = f.submit t('shoppe.stock_level_adjustments.add'), :class => 'button button-mini green'
        - for sla in @stock_level_adjustments
          %tr
            %td= l(sla.created_at, format: :long)
            %td= Shoppe::Location.find_by_id(sla.location_id) ? Shoppe::Location.find_by_id(sla.location_id).name : nil
            %td= sla.description
            %td= sla.adjustment > 0  ? "+#{sla.adjustment}" : sla.adjustment

    = paginate @stock_level_adjustments
